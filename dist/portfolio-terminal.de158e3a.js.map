{"mappings":"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","sources":["src/main.js"],"sourcesContent":["// React and ReactDOM are now available globally\nconst { createRoot } = window.ReactDOM;\nconst { useState, useRef, useEffect } = window.React;\n\n// Terminal component\nconst COMMANDS = {\n  help: `Available commands:\\nabout\\nexperience\\neducation\\nprojects\\nskills\\ncertifications\\nachievements\\nclear\\nhelp`,\n  about: `Adarsh Prakash\\nBangalore, India | +91-7360858539 | mikidarsh25@gmail.com | linkedin | github`,\n  experience: `Work Experience\\n\\nMember of Technical Staff-2\\nAquera Labs Private Limited\\nMay 2024 - Present\\n- Developed and maintained server-side applications using Node.js and Express.js across 4+ microservices, integrating 30+ npm libraries for cross-functional identity management products.\\n- Leveraged 25+ AWS services to scale infrastructure, improve reliability and reduce costs through resource optimization.\\n- Designed and executed over 300 unit and integration tests using Mocha and Jest, maintaining test coverage from 70% to 90%.\\n- Optimized over 100 complex SQL and NoSQL queries, resulting in a 25% improvement in average response time.\\n- Resolved memory leaks and conducted stress/load testing with 10,000+ concurrent users, improving throughput by 30%.\\n- Boosted application performance by 60% through Redis-based caching and DAX-enhanced read operations in DynamoDB.\\n- Refactored legacy code into modular, reusable components, reducing technical debt and improving code maintainability by 40%.\\n- Enabled secure partner access through a centralized IAM system with support for 3+ IDPs and self-service user management, cutting support effort by 60%.`,\n  education: `Education\\n\\nNational Institute of Technology, Jamshedpur\\nBachelor of Technology\\nSep 2020 - May 2024`,\n  projects: `Projects\\n\\nChat Application\\n- Created a real-time chat app using Node.js, Socket.io, and Express with HTML, CSS, and Bootstrap, integrating popular APIs and libraries to enhance user experience and functionality.\\n\\nSmart Task Manager Application\\n- Created a Smart Task Manager with task categorization, deadline tracking, and real-time notifications; secured with JWT, leveraged MongoDB for scalable storage, and structured a responsive, user-friendly UI.`,\n  skills: `Skills\\n\\nLanguages: JavaScript, TypeScript, Python\\nDatabases: PostgreSQL, MongoDB, SQLScript, DynamoDB, Redis\\nCloud Services: AWS (Lambda, Elastic Beanstalk, S3, SQS, Event Bridge, Cloudwatch, SES, API Gateway, Cognito, Cloud Front, DAX, SNS, EC2, IAM, ECS)\\nIdentity & Access Management (IAM): Okta, Azure Active Directory (Azure AD)\\nFrameworks/Libraries: Node.js, Express.js, Mocha, Jest\\nConcepts: Data Structures & Algorithms, Object-Oriented Programming, SCIM protocol, User Provisioning\\nFrontend: HTML, CSS, Bootstrap\\nTools/Technologies: Git, CI/CD, Microservices, JIRA, BitBucket, Agile`,\n  certifications: `Certifications\\n\\n- Ultimate AWS Certified Cloud Practitioner - Udemy\\n- JavaScript Algorithms and Data Structures by FreeCodeCamp\\n- The Complete Node.js Developer Course - Udemy\\n- Node JS: Advanced Concepts - Udemy`,\n  achievements: `Achievements\\n\\n- Outstanding Delivery and Innovation Award for early product delivery and impactful contributions to two major project implementations.`,\n};\n\nfunction Terminal() {\n  const [history, setHistory] = useState([{\n    type: 'output',\n    value: 'Welcome to Adarsh Prakash\\'s Portfolio Terminal! Type `help` to get started.'\n  }]);\n  const [input, setInput] = useState('');\n  const [isFocused, setIsFocused] = useState(false);\n  const inputRef = useRef(null);\n\n  useEffect(() => {\n    if (isFocused) inputRef.current.focus();\n  }, [isFocused]);\n\n  useEffect(() => {\n    window.addEventListener('click', () => setIsFocused(true));\n    return () => window.removeEventListener('click', () => setIsFocused(true));\n  }, []);\n\n  const handleCommand = (cmd) => {\n    if (cmd === 'clear') {\n      setHistory([]);\n      return;\n    }\n    const output = COMMANDS[cmd] || `Command not found: ${cmd}. Type 'help' for a list of commands.`;\n    setHistory((h) => [...h, { type: 'input', value: cmd }, { type: 'output', value: output }]);\n  };\n\n  const handleKeyDown = (e) => {\n    if (e.key === 'Enter') {\n      handleCommand(input.trim());\n      setInput('');\n    }\n  };\n\n  return window.React.createElement('div', { className: 'terminal-container', onClick: () => setIsFocused(true) },\n    window.React.createElement('div', { className: 'terminal-window' },\n      history.map((item, idx) =>\n        window.React.createElement('div', { key: idx, className: item.type === 'input' ? 'terminal-input-line' : 'terminal-output-line' },\n          item.type === 'input' ?\n            window.React.createElement('span', { className: 'terminal-prompt' }, `$ ${item.value}`) :\n            window.React.createElement('pre', null, item.value)\n        )\n      ),\n      window.React.createElement('div', { className: 'terminal-input-line' },\n        window.React.createElement('span', { className: 'terminal-prompt' }, '$ '),\n        window.React.createElement('input', {\n          ref: inputRef,\n          className: 'terminal-input',\n          value: input,\n          onChange: e => setInput(e.target.value),\n          onKeyDown: handleKeyDown,\n          onBlur: () => setIsFocused(false),\n          autoFocus: true\n        }),\n        window.React.createElement('span', { className: `terminal-cursor${isFocused ? ' blinking' : ''}` }, 'â–ˆ')\n      )\n    )\n  );\n}\n\n// App component\nconst App = () => {\n  return window.React.createElement('div', { className: 'App' },\n    window.React.createElement(Terminal)\n  );\n};\n\nconst rootElement = document.getElementById('root');\ncreateRoot(rootElement).render(window.React.createElement(App));\n"],"names":[],"version":3,"file":"portfolio-terminal.de158e3a.js.map","sourceRoot":"/__parcel_source_root/"}